Modified patch a4f56459268869f0188607ae2a897d6bf1136208 to apply to
CBL-Mariner: apply according to file structure in vendor directory & update "vendor/ostree/.cargo.checksum.json" for modified files
Modified-by: Sumedh Sharma <sumsharma@microsoft.com>

From fdf293b32dd49105a2b21d2d74c22e82d4fe7055 Mon Sep 17 00:00:00 2001
From: Colin Walters <walters@verbum.org>
Date: Fri, 18 Nov 2022 11:26:46 -0500
Subject: [PATCH] repo: Avoid potential double unwind when writing panic value

Thanks to @shinmao for the report!

Closes: https://github.com/ostreedev/ostree/issues/2775
---
 vendor/ostree/.cargo-checksum.json               |  2 +-
 .../repo_checkout_filter.rs                      | 16 ++++++++++++----
 2 files changed, 13 insertions(+), 5 deletions(-)

diff --git a/vendor/ostree/.cargo-checksum.json b/vendor/ostree/.cargo-checksum.json
index 72a8bf08..653e56bb 100644
--- a/vendor/ostree/.cargo-checksum.json
+++ b/vendor/ostree/.cargo-checksum.json
@@ -1 +1 @@
-{"files":{"Cargo.toml":"c651327862787305761bd13848491b4a1cca9d7b5a4b355c92d8d8ebe4e3824f","Dockerfile":"236e62560728d67f82fb64411f6a3133890bb743cf2e91002dc0fa350d8aa6dd","LICENSE":"862f6f81dc02304bdfe6f32dace3eeb13f523f0be8b053a3e703a3c2e70e217c","Makefile":"6831b328c12a2a47fecd18547c06889bc9beaf84642d880588d3dc250e3483fe","README.md":"b6586047ed4161a158f14a3f3b8ea715aa3c8cc40a93614fe5465d940534b14d","Vagrantfile":"62f85b9ba7f467e53bd1d87e42a472d47efa4649ee5506cf935379702c0151b4","src/auto/async_progress.rs":"c1f2b5d78e491adaac3aaf587650c235efb616b946b08c3bd7b069e74c6c1897","src/auto/bootconfig_parser.rs":"2a2b502f919980acaf249a4a9979dbf593356efd818118cdc3bb74059ebf741d","src/auto/collection_ref.rs":"56976c6885e595e0e5d3daffe6192c9b03ce3c71ef7959c090f2e881315005a8","src/auto/commit_sizes_entry.rs":"b99b4bac7d5ca3e9024436a0f2df0d6bf6c271f95ac69cbc337a72af604d6bc9","src/auto/constants.rs":"b82734143804b14bf215c82c5657730bfa3b776ce1d764bdfb3e9a880c0ff920","src/auto/content_writer.rs":"9f8e46f3008935a4ee9825ff84705f7c85792b4efbe1f91783c6e05cb63fadd7","src/auto/deployment.rs":"791a92082844aae0cea47e44e80b92bab044447d89b5d5cea648e42f538bfd8b","src/auto/diff_item.rs":"e2d34388a79ef6fa68b4277bdb6348b9eb908a0d15da464ba059bae8130fa86e","src/auto/enums.rs":"cf8aa3a31983d2f41ab2e7e0b83a4afd9b366e1fc25b4372e78148fa21f09a12","src/auto/flags.rs":"a2b40abb86e95be0519eaaa913b935983502080f67f8d8ab1294f2bc64f8d21a","src/auto/functions.rs":"d5d9fec183714e3d60d613a94cdfdddfc04c540a7fd7dfd3760fdb4aa81c0a8f","src/auto/gpg_verify_result.rs":"bcb89be0d879d15c00cdeff4a96741fa54386ae0ebdae1626e3d3e2314939fd9","src/auto/mod.rs":"88fbbed081e8f80fcb33a44493da252d1f1db5919ea5034f849d11258f69807a","src/auto/mutable_tree.rs":"41664df2d2d4c25fe46b8fdf78db1b512e076ca846bf319428ebf81696d4f6a2","src/auto/remote.rs":"2d7416c6bd927b7c83f513b8b8f608a5fe09ad5c154a182c308bf84cc2ef6424","src/auto/repo.rs":"aaac3e812e578f42a4c2c391b8bbd9e29bea784af9572a1c0aacd67a26ba8f81","src/auto/repo_commit_modifier.rs":"a0de077456399d91ff532bd18076ceb67dc64995ba4bb5f3ff0dba26ef358f5a","src/auto/repo_dev_ino_cache.rs":"e15b0c6c8d760cf1761d30d35763c1e7f0e0dd0a650ef833e95fcc900f0a09f7","src/auto/repo_file.rs":"5c3c66bd61e2087dbae536526ced38ea909c76ec7e25e24b7a38f69f6e90ac42","src/auto/repo_finder.rs":"e97a11ce688183429e9a1311303bf80ef80fdfb6566b3856c145ac4c8b7758e8","src/auto/repo_finder_avahi.rs":"4806ad744e6525b4b9c66a52eab581d4813f01a13d7e1f1f040e2443c1055518","src/auto/repo_finder_config.rs":"9b13ece391abd324bace8bd1720b00f3f5e3154dfa9b49ec951d0a9cab97cdf1","src/auto/repo_finder_mount.rs":"dec98e5350ba9118256954cb83ecba32352cc8b790c09a74638359969b62a414","src/auto/repo_finder_override.rs":"10ec024996420917917681a30381c207aa3204dc73e371ee53ce833e4fae19d9","src/auto/repo_finder_result.rs":"77ad82b5a20d5994e49daa98e77e9d38bd0e2f450f568544a18e3cb2cf45f5e5","src/auto/se_policy.rs":"73ea861a6a9d28fbc2327e09edf5ff7d559b41c6ac38b79761e4a06067be3d0e","src/auto/sign.rs":"bf293397adfc2c3d919836bef82f45a1f9c0fae2a473bdca8b07adf9882259c0","src/auto/sysroot.rs":"c9144c2ff7048b1bdfed647e4ee10bd56a9fdb1cbf0f357cf47880317907774f","src/auto/sysroot_upgrader.rs":"ad8c3d0d513ba49cbb609f8555f736420705590cf287f851dd56a144d26d7ffd","src/auto/versions.txt":"faf78ccb7fa64314aa3bb4396a521c81b6f6e34e40475811fd3f2193d500ea62","src/checksum.rs":"9600a50f15a9e446b619418bb972593b8b0632e35811c38685147bc705ee826b","src/collection_ref.rs":"c554994ae5966bf2bacf8b6b781e66572f260b7ebef32ea5d2f0ffb831d0066c","src/commit_sizes_entry.rs":"75cad5dbebbf7e0902af7b97539eaf52be3cfa7f1e68a47b0fbb3a72148b1af0","src/core.rs":"a3fde14dc50e7680c808085b9886c00f95cb2d856e829c208b298cd2287d7b45","src/functions.rs":"7904907f05e48df38f9c64adf6fe8b6bc5d50f314f85f0db1a26843e61b24125","src/kernel_args.rs":"da992dfb0e55b3807dec09e3ace6a7b1fb81bfbc1d071d777ec65107aa495dd7","src/lib.rs":"f789bd85540b70f6b6a4c11f725f2dcdb54650b0de473fe70756f16ba0bd6742","src/object_details.rs":"5b52703ad0cdb9cb96fd51feeb2ec3596047b7c51863d860e0a7a8fee7ba0ca6","src/object_name.rs":"339bb916bc7d0a21437eefe2485e82fe16b80cdde41c953c5f7fa60970b83e17","src/repo.rs":"cdf22871135f93f8acc9850067a14f31eb6524f0d8f0abbf0dd84f221b7118b2","src/repo_checkout_at_options/mod.rs":"c0f3ea18e9475b048acd110d1ad8f2db558255358f5de523223fc498b68efb56","src/repo_checkout_at_options/repo_checkout_filter.rs":"b12571e3f80ca9f31e42ff009027a2248efce126ad8093dd73a38b1df5187a7b","src/repo_transaction_stats.rs":"cbeb06983117f3e32e04f176b87109c1946b6828d492435783305183b77db8e5","src/se_policy.rs":"782bffa497b38fe6af618ec7c1b817da3d0bec3ae859c11a13761614c987c5a9","src/sysroot.rs":"d7eb8aa7aae4f0a0e1d17252703b4abbd4be71dbbf4aaf63e6439971069cc0d6","src/sysroot_deploy_tree_opts.rs":"96accf79587ccb092c56ef67bd84291434ec1525e028aa206aa8827a3a93cf9d","src/sysroot_write_deployments_opts.rs":"da6d036a197c7acc099666bcd92defbd65a8897928a0c559260b6fa1c0eebe72","src/tests/collection_ref.rs":"4c052442014143cce12e7beb784c42984f0fb164537a37c93583cf565b71005e","src/tests/kernel_args.rs":"6f98888b032379ee9bcb379bbdd19cb708f4efabe567a48e04941bbeaa0f8dbb","src/tests/mod.rs":"0a30255a3b808e7f2cfc224de40fd671a4bb13ea4986ed7782433800e85a29d2","src/tests/repo.rs":"aa970c5c1ac987638fcddac5ff7276abe9c00a47fdfe827bed2e2960c4c54396","tests/core/mod.rs":"c6af4b2722e78b15e4fa862c050df986b6da69371e0c20db142c4221c7ee05a0","tests/data/test.tar":"43fa0d8fffd70c42ee87cd8bf58a19c7ca1cfb4dce81fa18efc93431d511fc26","tests/functions/mod.rs":"307ea1ecea88a7cf1d9b85c03caacdb2dd984766a643c2c59df449f772f1e105","tests/repo/checkout_at.rs":"f78bae4178f5ea7c892f842c9164edb4c2df2b64ecab0847cafe422ed6c468ff","tests/repo/mod.rs":"3d2224fa61339ab8f563dbf495d9ea6c98605e7770ed1db72ade7c2239b007ed","tests/sign/mod.rs":"eccb7e1202365d0d62eee7df0a67a03ceaffa6b6ca1dfd11f431a815d6b19cf2","tests/tests.rs":"85893ff3e9eaca1f06fc73ecee0df0126247e7f839efb2a3ff76d65e8d288150","tests/util/mod.rs":"e4989cf61bbc3ceae81f72fe1c8f4589edccdfba980c65b18e77b95b946ad14d"},"package":"dc5d16335f66a870ffe07c0c8dc0c67e4d530de3b58b08d631563bf56cb135ce"}
\ No newline at end of file
+{"files":{"Cargo.toml":"c651327862787305761bd13848491b4a1cca9d7b5a4b355c92d8d8ebe4e3824f","Dockerfile":"236e62560728d67f82fb64411f6a3133890bb743cf2e91002dc0fa350d8aa6dd","LICENSE":"862f6f81dc02304bdfe6f32dace3eeb13f523f0be8b053a3e703a3c2e70e217c","Makefile":"6831b328c12a2a47fecd18547c06889bc9beaf84642d880588d3dc250e3483fe","README.md":"b6586047ed4161a158f14a3f3b8ea715aa3c8cc40a93614fe5465d940534b14d","Vagrantfile":"62f85b9ba7f467e53bd1d87e42a472d47efa4649ee5506cf935379702c0151b4","src/auto/async_progress.rs":"c1f2b5d78e491adaac3aaf587650c235efb616b946b08c3bd7b069e74c6c1897","src/auto/bootconfig_parser.rs":"2a2b502f919980acaf249a4a9979dbf593356efd818118cdc3bb74059ebf741d","src/auto/collection_ref.rs":"56976c6885e595e0e5d3daffe6192c9b03ce3c71ef7959c090f2e881315005a8","src/auto/commit_sizes_entry.rs":"b99b4bac7d5ca3e9024436a0f2df0d6bf6c271f95ac69cbc337a72af604d6bc9","src/auto/constants.rs":"b82734143804b14bf215c82c5657730bfa3b776ce1d764bdfb3e9a880c0ff920","src/auto/content_writer.rs":"9f8e46f3008935a4ee9825ff84705f7c85792b4efbe1f91783c6e05cb63fadd7","src/auto/deployment.rs":"791a92082844aae0cea47e44e80b92bab044447d89b5d5cea648e42f538bfd8b","src/auto/diff_item.rs":"e2d34388a79ef6fa68b4277bdb6348b9eb908a0d15da464ba059bae8130fa86e","src/auto/enums.rs":"cf8aa3a31983d2f41ab2e7e0b83a4afd9b366e1fc25b4372e78148fa21f09a12","src/auto/flags.rs":"a2b40abb86e95be0519eaaa913b935983502080f67f8d8ab1294f2bc64f8d21a","src/auto/functions.rs":"d5d9fec183714e3d60d613a94cdfdddfc04c540a7fd7dfd3760fdb4aa81c0a8f","src/auto/gpg_verify_result.rs":"bcb89be0d879d15c00cdeff4a96741fa54386ae0ebdae1626e3d3e2314939fd9","src/auto/mod.rs":"88fbbed081e8f80fcb33a44493da252d1f1db5919ea5034f849d11258f69807a","src/auto/mutable_tree.rs":"41664df2d2d4c25fe46b8fdf78db1b512e076ca846bf319428ebf81696d4f6a2","src/auto/remote.rs":"2d7416c6bd927b7c83f513b8b8f608a5fe09ad5c154a182c308bf84cc2ef6424","src/auto/repo.rs":"aaac3e812e578f42a4c2c391b8bbd9e29bea784af9572a1c0aacd67a26ba8f81","src/auto/repo_commit_modifier.rs":"a0de077456399d91ff532bd18076ceb67dc64995ba4bb5f3ff0dba26ef358f5a","src/auto/repo_dev_ino_cache.rs":"e15b0c6c8d760cf1761d30d35763c1e7f0e0dd0a650ef833e95fcc900f0a09f7","src/auto/repo_file.rs":"5c3c66bd61e2087dbae536526ced38ea909c76ec7e25e24b7a38f69f6e90ac42","src/auto/repo_finder.rs":"e97a11ce688183429e9a1311303bf80ef80fdfb6566b3856c145ac4c8b7758e8","src/auto/repo_finder_avahi.rs":"4806ad744e6525b4b9c66a52eab581d4813f01a13d7e1f1f040e2443c1055518","src/auto/repo_finder_config.rs":"9b13ece391abd324bace8bd1720b00f3f5e3154dfa9b49ec951d0a9cab97cdf1","src/auto/repo_finder_mount.rs":"dec98e5350ba9118256954cb83ecba32352cc8b790c09a74638359969b62a414","src/auto/repo_finder_override.rs":"10ec024996420917917681a30381c207aa3204dc73e371ee53ce833e4fae19d9","src/auto/repo_finder_result.rs":"77ad82b5a20d5994e49daa98e77e9d38bd0e2f450f568544a18e3cb2cf45f5e5","src/auto/se_policy.rs":"73ea861a6a9d28fbc2327e09edf5ff7d559b41c6ac38b79761e4a06067be3d0e","src/auto/sign.rs":"bf293397adfc2c3d919836bef82f45a1f9c0fae2a473bdca8b07adf9882259c0","src/auto/sysroot.rs":"c9144c2ff7048b1bdfed647e4ee10bd56a9fdb1cbf0f357cf47880317907774f","src/auto/sysroot_upgrader.rs":"ad8c3d0d513ba49cbb609f8555f736420705590cf287f851dd56a144d26d7ffd","src/auto/versions.txt":"faf78ccb7fa64314aa3bb4396a521c81b6f6e34e40475811fd3f2193d500ea62","src/checksum.rs":"9600a50f15a9e446b619418bb972593b8b0632e35811c38685147bc705ee826b","src/collection_ref.rs":"c554994ae5966bf2bacf8b6b781e66572f260b7ebef32ea5d2f0ffb831d0066c","src/commit_sizes_entry.rs":"75cad5dbebbf7e0902af7b97539eaf52be3cfa7f1e68a47b0fbb3a72148b1af0","src/core.rs":"a3fde14dc50e7680c808085b9886c00f95cb2d856e829c208b298cd2287d7b45","src/functions.rs":"7904907f05e48df38f9c64adf6fe8b6bc5d50f314f85f0db1a26843e61b24125","src/kernel_args.rs":"da992dfb0e55b3807dec09e3ace6a7b1fb81bfbc1d071d777ec65107aa495dd7","src/lib.rs":"f789bd85540b70f6b6a4c11f725f2dcdb54650b0de473fe70756f16ba0bd6742","src/object_details.rs":"5b52703ad0cdb9cb96fd51feeb2ec3596047b7c51863d860e0a7a8fee7ba0ca6","src/object_name.rs":"339bb916bc7d0a21437eefe2485e82fe16b80cdde41c953c5f7fa60970b83e17","src/repo.rs":"cdf22871135f93f8acc9850067a14f31eb6524f0d8f0abbf0dd84f221b7118b2","src/repo_checkout_at_options/mod.rs":"c0f3ea18e9475b048acd110d1ad8f2db558255358f5de523223fc498b68efb56","src/repo_checkout_at_options/repo_checkout_filter.rs":"cb46bdaeae6dbbaf586a149cbe5895ba7818e6416e74d961c9d1f2164be9d4f6","src/repo_transaction_stats.rs":"cbeb06983117f3e32e04f176b87109c1946b6828d492435783305183b77db8e5","src/se_policy.rs":"782bffa497b38fe6af618ec7c1b817da3d0bec3ae859c11a13761614c987c5a9","src/sysroot.rs":"d7eb8aa7aae4f0a0e1d17252703b4abbd4be71dbbf4aaf63e6439971069cc0d6","src/sysroot_deploy_tree_opts.rs":"96accf79587ccb092c56ef67bd84291434ec1525e028aa206aa8827a3a93cf9d","src/sysroot_write_deployments_opts.rs":"da6d036a197c7acc099666bcd92defbd65a8897928a0c559260b6fa1c0eebe72","src/tests/collection_ref.rs":"4c052442014143cce12e7beb784c42984f0fb164537a37c93583cf565b71005e","src/tests/kernel_args.rs":"6f98888b032379ee9bcb379bbdd19cb708f4efabe567a48e04941bbeaa0f8dbb","src/tests/mod.rs":"0a30255a3b808e7f2cfc224de40fd671a4bb13ea4986ed7782433800e85a29d2","src/tests/repo.rs":"aa970c5c1ac987638fcddac5ff7276abe9c00a47fdfe827bed2e2960c4c54396","tests/core/mod.rs":"c6af4b2722e78b15e4fa862c050df986b6da69371e0c20db142c4221c7ee05a0","tests/data/test.tar":"43fa0d8fffd70c42ee87cd8bf58a19c7ca1cfb4dce81fa18efc93431d511fc26","tests/functions/mod.rs":"307ea1ecea88a7cf1d9b85c03caacdb2dd984766a643c2c59df449f772f1e105","tests/repo/checkout_at.rs":"f78bae4178f5ea7c892f842c9164edb4c2df2b64ecab0847cafe422ed6c468ff","tests/repo/mod.rs":"3d2224fa61339ab8f563dbf495d9ea6c98605e7770ed1db72ade7c2239b007ed","tests/sign/mod.rs":"eccb7e1202365d0d62eee7df0a67a03ceaffa6b6ca1dfd11f431a815d6b19cf2","tests/tests.rs":"85893ff3e9eaca1f06fc73ecee0df0126247e7f839efb2a3ff76d65e8d288150","tests/util/mod.rs":"e4989cf61bbc3ceae81f72fe1c8f4589edccdfba980c65b18e77b95b946ad14d"},"package":"dc5d16335f66a870ffe07c0c8dc0c67e4d530de3b58b08d631563bf56cb135ce"}
diff --git a/vendor/ostree/src/repo_checkout_at_options/repo_checkout_filter.rs b/vendor/ostree/src/repo_checkout_at_options/repo_checkout_filter.rs
index 17310e42..ce1fa8eb 100644
--- a/vendor/ostree/src/repo_checkout_at_options/repo_checkout_filter.rs
+++ b/vendor/ostree/src/repo_checkout_at_options/repo_checkout_filter.rs
@@ -106,18 +106,26 @@ pub(super) unsafe extern "C" fn filter_trampoline_unwindsafe(
 ///
 /// If the panic value is either `&str` or `String`, we print it. Otherwise, we don't.
 fn print_panic(panic: Box<dyn Any>) {
-    eprintln!("A Rust callback invoked by C code panicked.");
-    eprintln!("Unwinding across FFI boundaries is Undefined Behavior so abort() will be called.");
+    use std::io::Write;
+    let stderr = std::io::stderr();
+    let mut stderr = stderr.lock();
+    // Directly write to stderr instead of eprintln!() as that function panics
+    // if writing fails, which would involve a double panic which we don't want.
+    let _ = stderr.write_all(
+        r#"A Rust callback invoked by C code panicked.
+Unwinding across FFI boundaries is Undefined Behavior so abort() will be called."#
+            .as_bytes(),
+    );
     let msg = {
         if let Some(s) = panic.as_ref().downcast_ref::<&str>() {
             s
         } else if let Some(s) = panic.as_ref().downcast_ref::<String>() {
             s
         } else {
-            "UNABLE TO SHOW VALUE OF PANIC"
+            "(non-string panic value)"
         }
     };
-    eprintln!("Panic value: {}", msg);
+    let _ = stderr.write_all(msg.as_bytes());
 }
 
 #[cfg(test)]
-- 
2.25.1

