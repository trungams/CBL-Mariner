From 3d11c74327eef4f2f9fb9c30c4dc3c950a1e71f3 Mon Sep 17 00:00:00 2001
From: fullwaywang <fullwaywang@tencent.com>
Date: Thu, 15 Jun 2023 14:46:09 +0800
Subject: [PATCH 1/2] Fix divide-by-zero vulnerability in scroll_cursor_bot.
 Fix #12528

---
 src/move.c                                    | 24 ++++++++++---------
 .../dumps/Test_smoothscroll_zero_bot.dump     | 19 +++++++++++++++
 src/testdir/test_scroll_opt.vim               | 22 +++++++++++++++++
 3 files changed, 54 insertions(+), 11 deletions(-)
 create mode 100644 src/testdir/dumps/Test_smoothscroll_zero_bot.dump

diff --git a/src/move.c b/src/move.c
index ea7d38005672..e12cfb4f0c5d 100644
--- a/src/move.c
+++ b/src/move.c
@@ -2591,17 +2591,19 @@ scroll_cursor_bot(int min_scroll, int set_topbot)
 					(curwin, curwin->w_topline, FALSE);
 	    int skip_lines = 0;
 	    int width1 = curwin->w_width - curwin_col_off();
-	    int width2 = width1 + curwin_col_off2();
-	    // similar formula is used in curs_columns()
-	    if (curwin->w_skipcol > width1)
-		skip_lines += (curwin->w_skipcol - width1) / width2 + 1;
-	    else if (curwin->w_skipcol > 0)
-		skip_lines = 1;
-
-	    top_plines -= skip_lines;
-	    if (top_plines > curwin->w_height)
-	    {
-		scrolled += (top_plines - curwin->w_height);
+	    if (width1 > 0) {
+		int width2 = width1 + curwin_col_off2();
+		// similar formula is used in curs_columns()
+		if (curwin->w_skipcol > width1)
+		    skip_lines += (curwin->w_skipcol - width1) / width2 + 1;
+		else if (curwin->w_skipcol > 0)
+		    skip_lines = 1;
+
+		top_plines -= skip_lines;
+		if (top_plines > curwin->w_height)
+		{
+		    scrolled += (top_plines - curwin->w_height);
+		}
 	    }
 	}
     }
diff --git a/src/testdir/dumps/Test_smoothscroll_zero_bot.dump b/src/testdir/dumps/Test_smoothscroll_zero_bot.dump
new file mode 100644
index 000000000000..179b95c6e9a7
--- /dev/null
+++ b/src/testdir/dumps/Test_smoothscroll_zero_bot.dump
@@ -0,0 +1,19 @@
+| +0#af5f00255#ffffff0||+1#0000000&| +0&&@9
+|@+0#4040ff13&||+1#0000000&| +0&&@9
+|@+0#4040ff13&||+1#0000000&| +0&&@9
+|@+0#4040ff13&||+1#0000000&| +0&&@9
+|@+0#4040ff13&||+1#0000000&| +0&&@9
+|@+0#4040ff13&||+1#0000000&| +0&&@9
+|@+0#4040ff13&||+1#0000000&| +0&&@9
+|@+0#4040ff13&||+1#0000000&| +0&&@9
+|@+0#4040ff13&||+1#0000000&| +0&&@9
+|@+0#4040ff13&||+1#0000000&| +0&&@9
+|@+0#4040ff13&||+1#0000000&| +0&&@9
+|@+0#4040ff13&||+1#0000000&| +0&&@9
+|@+0#4040ff13&||+1#0000000&| +0&&@9
+|@+0#4040ff13&||+1#0000000&| +0&&@9
+|@+0#4040ff13&||+1#0000000&| +0&&@9
+|@+0#4040ff13&||+1#0000000&| +0&&@9
+>@+0#4040ff13&||+1#0000000&| +0&&@9
+|<+3&&| |<+1&&|a|m|e|]| |[|+|]| 
+| +0&&@11
diff --git a/src/testdir/test_scroll_opt.vim b/src/testdir/test_scroll_opt.vim
index 460416665d7f..096c695c8842 100644
--- a/src/testdir/test_scroll_opt.vim
+++ b/src/testdir/test_scroll_opt.vim
@@ -833,4 +833,26 @@ func Test_smoothscroll_multi_skipcol()
   call StopVimInTerminal(buf)
 endfunc
 
+" this was dividing by zero bug in scroll_cursor_bot
+func Test_smoothscroll_zero_width_scroll_cursor_bot()
+  CheckScreendump
+
+  let lines =<< trim END
+      silent normal yy
+      silent normal 19p
+      wi0 19
+      vsplit
+      vertical resize 0
+      set foldcolumn=1
+      set number
+      set smoothscroll
+      silent normal 20G
+  END
+  call writefile(lines, 'XSmoothScrollZeroBot', 'D')
+  let buf = RunVimInTerminal('-u NONE -S XSmoothScrollZeroBot', #{rows: 19, wait_for_ruler: 0})
+  call VerifyScreenDump(buf, 'Test_smoothscroll_zero_bot', {})
+
+  call StopVimInTerminal(buf)
+endfunc
+
 " vim: shiftwidth=2 sts=2 expandtab

From e6db8a95174d0a63ba95504fbb1804b9a551bafd Mon Sep 17 00:00:00 2001
From: fullwaywang <fullwaywang@tencent.com>
Date: Fri, 16 Jun 2023 10:27:28 +0800
Subject: [PATCH 2/2] Fix codestyle.

---
 src/move.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/src/move.c b/src/move.c
index e12cfb4f0c5d..22c37ce28591 100644
--- a/src/move.c
+++ b/src/move.c
@@ -2591,7 +2591,8 @@ scroll_cursor_bot(int min_scroll, int set_topbot)
 					(curwin, curwin->w_topline, FALSE);
 	    int skip_lines = 0;
 	    int width1 = curwin->w_width - curwin_col_off();
-	    if (width1 > 0) {
+	    if (width1 > 0)
+	    {
 		int width2 = width1 + curwin_col_off2();
 		// similar formula is used in curs_columns()
 		if (curwin->w_skipcol > width1)
