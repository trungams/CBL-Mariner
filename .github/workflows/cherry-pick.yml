# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

name: Cherry pick commits from PR
on:
  issue_comment:
    types:
      - created
jobs:
  pr_info:
    if: |
      ${{ github.event.issue.pull_request }}
        && startsWith(${{ github.event.comment.body }}, '/cherry-pick ')
        && (${{ github.event.comment.author_association == 'MEMBER '}}
          || ${{ github.event.comment.author_association == 'OWNER' }})

    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    outputs:
      status: ${{ steps.pr_info.outputs.status }}
      base_ref: ${{ steps.pr_info.outputs.base_ref }}
      merge_commit: ${{ steps.pr_info.outputs.merge_commit }}
    steps:
      - name: Extract PR information
        id: pr_info
        run: |
          echo "status=$(gh pr view ${{ github.event.issue.number }} --repo ${{ github.repository }} --json state --jq '.state')" >> $GITHUB_OUTPUT
          echo "base_ref=$(gh pr view ${{ github.event.issue.number }}) --repo ${{ github.repository }} --json baseRefName --jq '.baseRefName'" >> $GITHUB_OUTPUT
          echo "merge_commit=$(gh pr view ${{ github.event.issue.number }} --repo ${{ github.repository }} --json mergeCommit --jq '.mergeCommit.oid')" >> $GITHUB_OUTPUT

      - name: Post workflow run to PR
        run: |
          if [ "${{ steps.pr_info.outputs.status }}" != "MERGED" ] || [ "${{ steps.pr_info.outputs.base_ref }}" != "fasttrack/"* ]; then
            gh pr comment ${{ github.event.issue.number }} --body "Cherry pick action is only enabled for merged pull requests to `fasttrack/*` branches"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cherry_pick_commit:
    needs: pr_info
    if: |
      ${{ needs.pr_info.outputs.status == 'MERGED' }}
        && startsWith(${{ needs.pr_info.outputs.base_ref }}, 'fasttrack')

    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    defaults:
      run:
        shell: bash
    name: Cherry pick
    steps:
      - name: Workflow trigger checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.pr_info.outputs.base_ref }}
          fetch-depth: 0

      - name: Validate and extract cherry pick target from comment
        run: |
          branches_list=${${{ github.event.comment.body }}#"/cherry-pick "}
          IFS=", " read -ra target_branches <<< "$branches_list"
          echo "cherry_pick_target_branches=${target_branches[*]}" >> $GITHUB_ENV

      - name: Configure git
        run: |
          git config --local user.email "$GIT_USER_EMAIL"
          git config --local user.name "$GIT_USER_NAME"
        env:
          GIT_USER_EMAIL: "tvuong@microsoft.com"
          GIT_USER_NAME: "Thien Trung Vuong"

      - name: Run cherry-pick action
        run: |
          for target_branch in ${{ env.cherry_pick_target_branches }}; do
            echo "Cherry picking commit to $target_branch"

            log_file="${{ runner.temp }}/$target_branch.txt"

            git fetch --all
            git reset --hard
            git clean -df
            git checkout -- .

            toolkit/scripts/cherry_pick.sh \
              -b "$target_branch" \
              -c "${{ needs.pr_info.outputs.merge_commit }}" \
              -o "${{ github.event.issue.pull_request.html_url }}" \
              -l "$log_file" \
              -t "${{ github.event.issue.title }}" \
              || rc=$?
            if [ ${rc:-0} -ne 0 ]; then
              gh pr comment ${{ github.event.issue.number }} --body "Cherry-pick failed for branch $target_branch. See log file below for conflicts"
              cat "$log_file"
            else
              gh pr comment ${{ github.event.issue.number }} --body "Cherry-pick succeeded for branch $target_branch. See pull request $(cat $log_file)"
              # TODO: add cherry pick label
            fi
            echo "=============================================================="
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
